 // [문제] 이름을 입력받아 환영한다는 문자를 출력하라.
// 이 과정을 영원히 반복하라.


// [문제] 구구단을 출력하는 프로그램을 작성하라.
// 몇 단을 출력할 것인지 입력받고 그 단을 화면에 출력하면 된다.


// [문제] C++ 언어에서 미리 정의한 자료형 int의 메모리 크기를 알아보자.


// [문제] int의 최대값과 최솟값을 출력하라.


// [문제] 실행해 보고 값이 출력되는 이유를 설명해 보라.

int num;   // 전역 변수는 항상 0으로 초기화 됨을 보장한다. // { } 으로 초기화되기 떄문 - defualt 초기화 


변수 앞에  :: 이것을 붙이면 전역변수에서 초기화 한 값이 출력 된다. 


// [문제] num에 저장된 정수 10개를 출력하라.



// [문제] num에 저장된 값을 모두 출력하라.
	// range-for를 이용하여 출력한다.



// [문재] 각 변수의 내용과 메모리 주소를 출력하라.



// [문재] 각 변수의 내용과 메모리 주소를 출력하라. (5분)



// [문제] num의 모든 원소의 값과 주소를 출력하라. (5분) .......... int num[] {11, 22, 33, 44, 55


// [문제] 전역변수와 지역변수가 만들어진 공간이 다름을 확인하라.




---------------------------------------------------------

int main() 
//---------
{
	int a{ 1 };
	int b{ 2 };

	// [문제] 여기에서 뭔가를 하여 다음 문장을 실행하면 2, 1 과 같이 출력되도록 하라.

	cout << a << ", " << b << endl;

	save("소스.cpp"); 
}


---------------------------------------------------------

int num[]{ 3, 1, 9, 5, 7 };

// [문제] num에 저장된 int 값 중에서 제일 큰 수를 마지막 위치로 옮겨라 (10분)
// int num[] {1, 3, 5, 7, 9}

---------------------------------------------------------


// [문제] num에 저장된 int 값 중에서 제일 큰 수를 마지막 위치로 옮겨라 (10분)
// int num[] {1, 3, 5, 7, 9}



// [문제] num에 저장된 int 값을 오름차순(ascending order)으로 정렬(sort)하시오.  (손 코딩으로 풀어보기)
// int num[]{12, 43, 333, 12, 333, 33333, 124235, 6, -120, -111};
---------------------------------------------------------------------------------------------------------------------------

// [문제] 임의의 정수값을 화면에 출력하라.
// (실습) random number generation을 구글링할 것


----------------------------------------------------------
따로 공부할 내용
// C++에서 랜덤값 생성
	// - 랜덤엔진과 분포를 사용한다.
(default_random_engine)
------------------------------------------------------------

// [문제] 주사위 값을 출력하라.


// [문제] 주사위 값을 출력하라. 그런데 1/10초 마다 하나씩 출력하라.



--------------------------------------------------------------------------------
// [문제] 임의의 값을 갖는 정수 1'0000개를 생성하라.      or    // [문제] (1, 1000] 임의의 값을 갖는 정수 1'000개를 생성하라.
// 생성한 정수의 값을 화면에 출력하라.
// 정수를 오름차순으로 정렬하라.
// 정렬한 정수를 화면에 출력하라.               (20분)
--------------------------------------------------------------------------------


(실습) 정수를 내림차순으로 정렬하라.  <----------- 숙제! 직접 풀어볼것
--------------------------------------------------------------------------------------------

// [문제] 주사위를 1'0000번 던져 나온 숫자를 저장하라.
// 각 수자의 출현 확률을 계산하여 화면에 출력하라.

 static_cast<int>

-------------------------------------------------------------------------------

// [문제] 파일 "점수.txt"에는 학생 100명의 C++ 점수가 저장되어 있다.
// 평균점수를 계산하여 화면에 출력하라.



// [문제] 2, 1이 출력되도록 함수를 만들어 호출하라. (10분)


64비트는 *가 64bit -> 8byte



// [문제] a를 오름차순으로 정렬하시오.
   - int a[]{ 1, 3, 5, 7, ,9, 2, 4, 6, 8, 10 };
sort를 이용함



// [문제] a를 내림차순으로 정렬하시오.
 - int a[]{ 1, 3, 5, 7, ,9, 2, 4, 6, 8, 10 };


// [실습] 두 개의 정수르 ㄹ인자로 받아 그 합을 되돌려주는 함수를 작성하라. (5분)


// [실습] 정수를 인자로 받아 정수의 값을 2배로 바꾸는 함수 makeDouble을 작성하라.
// 다음 문장이 화면 출력 예와 같이 출력되어야 한다.


* 비const 참조에 대한 초기 값은 lvalue여야 합니다.
함수 포인터를 사용하는 이유는 선언한 변수를 필요에 따라 함수를 고를 수 있다.


// [문제] 내가 부를 일이 없지만 기능만이 필요할 때 사용하는 이름없는 함수 lambda
	- "안녕! 난 람다라고 해!" 를 출력하는 람다를 작성하라.  (10점)
	- "안녕! 난 람다라고 해!" 를 출력하는 람다를 작성하고 호출하라.

------------------------------------------------------------------------------------------------------------------------------
(4주차 2일 1교시)
------------------------------------------------------------------------------------------------------------------------------

// [실습] 각 변수의 메모리 번지를 화면에 출력하라. (5분)


// [문제] 사용자가 원하는 숫자 만큼 정수 메모리를 확보하라.
// 그 값을 1부터 시작하는 정수로 채워라.
// (예) 사용자가 요구하는 수가 10이라면
// [1][2][3][4][5][6][7][8][9][10];		(10분)
// 이 과정을 영원히 반복하라. (값이 -이면 끝내라)


------------------------------------------------------------------------------------------------------------------------------
(4주차 2일 2교시)
------------------------------------------------------------------------------------------------------------------------------

// [문제] 사용자가 입력한 정수만큼 메모리를 확보하라. (동적할당)
// 확보한 메모리를 랜덤값(엔진/분포)으로 채워라.
// 가장 큰 값을 찾아 화면에 출력하라.
// 이 과정을 사용자가 0 이하의 수를 입력할 때 까지 영원히 반복하라. 


------------------------------------------------------------------------------------------------------------------------------
(5주차 1일 1교시)
------------------------------------------------------------------------------------------------------------------------------

// C++ 입출력

// [문제] 사용자가 원하는 양의 정수(num이라 하자)를 한 개 입력받아
//        1부터 num까지 정수의 합을 계산하여 화면 출력하는 코드를 작성하고 답지에 써라.
// (예) 사용자가 10을 입력하였다.
// 프로그램은 1 + 2 + 3 + ... + 10 의 합인 55를 화면에 출력한다.	(10분)

-----------------------------------------------------------------------------------------------------
이문제는 직접 풀어볼 것!

// [문제] 사용자가 원하는 양의 정수(num이라 하자)를 입력하였다.
// 프로그램은 1부터 시작하는 양의 정수를 더해나간다.
// 이때 합계가 num을 넘지 않는 최대 정수의 값을 구해 화면에 출력하라.
//
// (예) 사용자가 입력한 수 - 54
// 1부터 9까지의 합이 45이고, 1부터 10까지의 합은 55이므로 화면에 9를 출력한다.
// 답 - 9를 출력한다.

// (예) 사용자가 입력한 수 - 57
// 1부터 10까지의 합이 55이므로,
// 답 - 10을 출력한다.

------------------------------------------------------------------------------------------------------

// [문제] 사용자가 입력한 정수의 합을 계산하는 코드를 작성하라.
// 사용자는 정수를 마음껏 입력할 수 있다.
// 사용자가 0을 입력하면 합계를 화면출력하라.
// 이 과정을 반복하도록 코딩하라.


// [문제] "소스.cpp"에 '#' 문자가 몇 개 있는지 세서 출력하라. (10분)
// 파일을 열 수 있어야 한다.
// 파일에서 원하는 자료형을 메모리로 읽어 올 수 있어야 한다.


// [문제] "소스.cpp"에 알파벳 소문자가 각각 몇 개인지 세서 출력하라. (20분) (직접풀기, 강의해설 x)
// (예) 다음과 같이 출력하라
// a의 갯수 - 10
// b의 갯수 - 3
//
// z의 갯수 - 0


// [문제] "소스.cpp"에 알파벳 소문자의 갯수를 많이 사용된 순서로 출력하라. (30분)   (직접풀기, 강의해설 x)
// (예) 다음과 같이 출력하라
// e의 갯수 - 120
// i의 갯수 - 83
//
// z의 갯수 - 0


// [문제] 파일 이름을 입력받아 그 파일에 모두 몇 개의 단어(공백으로 분리된 문자열)
// 있는지 출력하라.
// (핵심) C++에서 단어를 처리하려면 string을 사용한다.


(위 문제의 심화 문제)
// [문제] 파일 이름을 입력받아 그 파일에 모두 몇 개의 단어(공백으로 분리된 문자열) 단위로 읽어라.
// 읽은 단어를 오름차순으로 정렬하라.
// 정렬한 단어를 화면에 출력하라.
// - 이 문제는 알고리즘과 자료구조를 이수한 이후 3학년 STL 과목에서 주로 다루게 된다.


// [문제] "글자들.txt"에는 소문자 1'0000개가 저장되어 있다.
//
// 문제 1. c는 모두 몇 개가 있나 출력하라.   (문제1번만 강의에서 풀음)
// 문제 2. 각 문자의 갯수를 출력하라.
//		   a - 
//         b - 
//
// 문제3. 가장 갯수가 많은 문자는 무엇인지 출력하라.


------------------------------------------------------------------------------------------------------------------------------
(5주차 2일 2교시)
------------------------------------------------------------------------------------------------------------------------------


// [문제] 다음 문장을 실행하여
// "여러분 안녕하세요?" 라고 출력되도록 필요한 코딩을 하고 답지에 적어라.
// main()의 코드는 한 글자도 수정하면 안된다. (5분)
//---------
int main()   
//---------
{
	string a{ "안녕하세요?" };
	string b{ "여러분" };
	
	f(a, b);	

	cout << a << " " << b << endl;

	save("소스.cpp"); 
}


// [문제] 배열 a의 원소를 값 오름차순으로 정렬하고 출력하라.


// [문제] 배열 strs의 원소를 값 오름차순으로 정렬하고 출력하라.


// [문제] 2차원 점 1000개를 만들고 좌표값을 [-100, 100]인 랜덤값으로 만들어라.
// 원점(0,0)에서 반경 20까지 영향을 미치는 폭탄이 터졌다.
// 모두 몇 개의 점이 영향을 받는지 출력하라.		(20분)



------------------------------------------------------------------------------------------------------------------------------
(6주차 2일 1교시)
------------------------------------------------------------------------------------------------------------------------------

 [문제] Point2D는 2차원 좌표를 나타낸다.


------------------------------------------------------------------------------------------------------------------------------
(6주차 2일 2교시)
------------------------------------------------------------------------------------------------------------------------------

// [문제] 다음과 같은 기능을 갖는 class Bell을 코딩하라.
// 생성시 정수를 인자로 받아 저장한다.
// play 함수를 호출하면 생성시 저장한 정수의 수만큼 벨소리를 연주한다.
// 벨소리와 벨소리 사이의 간겨은 1초로 한다.
// 벨소리는 아스키 코드를 사용한다.


------------------------------------------------------------------------------------------------------------------------------
(7주차 1일 1교시)
------------------------------------------------------------------------------------------------------------------------------

// [문제] main의 코드가 문제없이 실행되도록 class를 정의하고
// 모든 관찰메시지를 출력하라. (10분)

// [문제] 생성 시 양의 정수 num을 인자로 받아
// num개의 정수를 저장하는 메모리를 확보하고 그 값을 1부터 채워나가는 
// class Mem을 정의하라.
// Mem의 멤버함수 show()를 호출하면 메모리에 기록된 값을 화면에 출력한다.
// main() 코드가 문제없이 실행되고 의도대로 값을 출력하도록 하라.

// 문제해결 방법을 생각하는 시간 10분
// 코딩하는 시간 10분


// [문제] 객체의 동작을 화면 출력하여 관찰하라. (10분)
// 지금 문제있는 이 코드를 제대로 동작하도록 코딩하라.
// (main()의 내용이 변경되면 안된다)


------------------------------------------------------------------------------------------------------------------------------
(7주차 2일 1교시)
------------------------------------------------------------------------------------------------------------------------------

-------------------------------------------------------------------------------------
// [문제] 다음 main()이 문제없이 실행되도록 class String을 코딩하라.
// main() 이 수정되면 안된다.

//---------
int main()   
//---------
{
	String s1{ "안녕하세요" };
	String s2 = { "C++ 정말 좋은 프로그래밍 언어이다." };

	s2 = s1;

	s1.show();
	s2.show();

	/*save("소스.cpp");*/ 
}
-------------------------------------------------------------------------------------


------------------------------------------------------------------------------------------------------------------------------
(7주차 2일 2교시)
------------------------------------------------------------------------------------------------------------------------------

-------------------------------------------------------------------------------------------------------------------------------------



(9주차 2일 2교시)
// name을 길이 내림차순으로 정렬한 후
// 화면에 출력하라. (20)



-------------------------------------------
11주 - 문제
 [문제] 프로그램이 문제없이 실행되게 하자.

// [문제] 프로그램이 문제없이 실행되게 하자.
// Dog a와 b를 파일 "개들.txt"에 저장하라.
// Dog 2마리 정보가 파일 "개들.txt"에 저장되어있다.
// 파일에서 정보를 읽고 화면에 출력하라.


[문제] Dog 1'0000 객체를 랜덤하게 생성하여 파일 "개만마리.txt"에 기록하라.
// 이름은 영소문자 길이는 10글자 고정한다.
// 나이 [1, 1000]

// [문제] Dog 1'0000 마리 정보가 "개만마리txt"에  저장되어있다.
// [1] 자료를 읽어 화면에 출력하라.
// [2] 이름오름차순으로 정렬하라. - 출력
// [3] 나이오름차순으로 정렬하라. - 출력


---------------------------------------------------------------------------------
12주차 문제

// 동물농장 관리자다
// 사용자가 몇 마리의 동물을 관리하는지 입력받아라.
// 임의의 홀짝값에 따라 
// 홀수이면 Dog를 짝수이면 Bird를 생성하라.
// 모든 동물의 move()를 호출하여 다형성이 구현됨을 확인하시오.

























